# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - {kwadwo_news}

# Run the workflow whenever change is pushed into the main branch
on:
  push:
    branches:
      - main
  workflow_dispatch:

# Optional: environment variables can be injected here
# You can add these variables in your repository Settings - Secrets and variables - Actions - variables
env:
  VITE_ENV_VAR1: ${{ env.VITE_ENV_VAR1 }}
  VITE_ENV_VAR2: ${{ env.VITE_ENV_VAR2 }}

# There are two jobs in this workflow - build and deploy
jobs:
 # Builds the application for production. 
 # You should configure this environment as close as possible to the production environment, e.g. using Ubuntu for Linux apps, using the same Node version
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install dependencies, build, and test
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present
         # Other scripts if configured should be added here, such as linting, formating

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: node-app
          path: dist # This should be your distribution path, not the root path
 
 # Deploy the application to Azure
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: node-app

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: {kwadwo_news}
          slot-name: 'Production'
          publish-profile: ${{ <publishData><publishProfile profileName="afrilogic-devops - Web Deploy" publishMethod="MSDeploy" publishUrl="afrilogic-devops.scm.azurewebsites.net:443" msdeploySite="afrilogic-devops" userName="$afrilogic-devops" userPWD="4jjyelwoQWK5ral73zJ2hRjqj7kxgf37X8dreZLGpZ8z44jiNHaqggglQxa8" destinationAppUrl="https://afrilogic-devops.azurewebsites.net" SQLServerDBConnectionString="" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="https://portal.azure.com" webSystem="WebSites"><databases /></publishProfile><publishProfile profileName="afrilogic-devops - FTP" publishMethod="FTP" publishUrl="ftps://waws-prod-blu-507.ftp.azurewebsites.windows.net/site/wwwroot" ftpPassiveMode="True" userName="afrilogic-devops\$afrilogic-devops" userPWD="4jjyelwoQWK5ral73zJ2hRjqj7kxgf37X8dreZLGpZ8z44jiNHaqggglQxa8" destinationAppUrl="https://afrilogic-devops.azurewebsites.net" SQLServerDBConnectionString="" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="https://portal.azure.com" webSystem="WebSites"><databases /></publishProfile><publishProfile profileName="afrilogic-devops - Zip Deploy" publishMethod="ZipDeploy" publishUrl="afrilogic-devops.scm.azurewebsites.net:443" userName="$afrilogic-devops" userPWD="4jjyelwoQWK5ral73zJ2hRjqj7kxgf37X8dreZLGpZ8z44jiNHaqggglQxa8" destinationAppUrl="https://afrilogic-devops.azurewebsites.net" SQLServerDBConnectionString="" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="https://portal.azure.com" webSystem="WebSites"><databases /></publishProfile></publishData>}} # Publish profile should always be stored as secrets in your repository Settings - Secrets and variables - Actions - secrets
          package: .